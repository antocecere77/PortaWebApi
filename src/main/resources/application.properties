# ==============================================================
# = Article Web Service con Autenticazione JWT
# ==============================================================

server.port=5051

spring.datasource.initialization-mode=always
spring.datasource.password=123_Stella
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://192.168.99.100:5433/Alphashop
spring.datasource.username=postgres
spring.jpa.hibernate.ddl-auto=none
spring.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true

postgres.srvUrl=jdbc:postgresql://192.168.99.100:5433/Alphashop
postgres.userId=postgres
postgres.password=123_Stella

#Local MongoDB config
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=antonio
spring.data.mongodb.password=12345678
spring.data.mongodb.database=ms-users
spring.data.mongodb.port=37017
spring.data.mongodb.host=192.168.99.100

#configs to connect to a secured server
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.service-base-url=http://localhost:5051
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

#configs to give secured server info
#app config
spring.application.name=portal-api

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

logging.file=./logs/spring-boot-logger.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx 

# ==============================================================
# = Parametri Sicurezza JWT 
# ==============================================================
security.uri=/auth
security.refresh=/refresh
security.header=Authorization
security.prefix=Bearer
security.expiration=86400
security.secret=JwtS3cur1ty

